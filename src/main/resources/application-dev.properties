# Applicationn context name

app.message= This is the property file for the ${spring.application.name} specific to DEV Environment

server.servlet.context-path=/gostarjdbcservice
server.port=9099

# Datasource Configurations
#spring.datasource.url=jdbc:postgresql://172.21.0.152:5432/gostar_db?currentSchema=test_session
spring.datasource.url=jdbc:postgresql://172.21.0.152:5432/gostar_db
spring.datasource.username=gostar_ts_user
spring.datasource.password=gostar_ts_user
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
#spring.jpa.properties.hibernate.default_schema=test_session

# Jdbc Pool Configuration
spring.datasource.type = org.apache.tomcat.jdbc.pool.DataSource
spring.datasource.tomcat.initial-size=5
spring.datasource.tomcat.max-wait=2000000
spring.datasource.tomcat.max-active=2
spring.datasource.tomcat.max-idle=5
spring.datasource.tomcat.min-idle=1
spring.datasource.tomcat.default-auto-commit=true
spring.datasource.tomcat.test-on-borrow=false

spring.jpa.show-sql=true

# MVC Configuration
spring.mvc.view.prefix: /
spring.mvc.view.suffix: .jsp
spring.messages.basename=validation

user.max.sessions.count = 1

#### SQL Queries ###
# Target Queries
target.synonyms.findall.query = SELECT synonyms, target_id, syn_type, stdname_id, flag, target_synonym_id, synonyms as label, synonyms as value, '|' as operator FROM target_search.target_synonyms
#target.synonyms.findlike.query = SELECT synonyms, target_id, syn_type, stdname_id, flag, target_synonym_id, synonyms as label, synonyms as value, '|' as operator FROM target_search.target_synonyms WHERE synonyms LIKE ?
### target.synonyms.findlike.query = SELECT synonyms, target_id, syn_type, stdname_id, flag, target_synonym_id, synonyms as label, synonyms as value, '|' as operator FROM target_search.target_synonyms WHERE  synonyms LIKE '%' || ? || '%' order by case when synonyms = ? then 1 when synonyms LIKE ? || '%' then 2 else 3 end, synonyms
target.synonyms.findlike.query = select stdname_id, common_name, synonyms, synonyms as label, synonyms as value, '|' as operator from target_search.list_target_synonyms WHERE synonyms LIKE '%' || ? || '%' order by min(case when synonyms = ? then 1 when synonyms LIKE ? || '%' then 2 else 3 end) over (partition by stdname_id), common_name, case when synonyms = ? then 1 when synonyms LIKE ? || '%' then 2 else 3 end, synonyms
target.synonysm.stdnameid.query = SELECT DISTINCT stdname_id FROM target_search.target_synonyms ts WHERE synonyms IN (:synonymsList)

target.advsearch.locus.query = select locus_id, stdname_id, common_name,locus_id as label, locus_id as value, '|' as operator from target_search.list_locus_id WHERE locus_id LIKE '%' || ? || '%' order by min(case when locus_id = ? then 1  when locus_id LIKE ? || '%' then 2 else 3 end) over (partition by stdname_id), common_name,case when locus_id = ? then 1 when locus_id LIKE ? || '%' then 2 else 3 end, locus_id  
target.advsearch.officialname.query = select official_name, stdname_id, common_name, official_name as label, official_name as value, '|' as operator from target_search.list_official_name WHERE official_name LIKE '%' || ? || '%' order by min(case when official_name = ? then 1  when official_name LIKE ? || '%' then 2 else 3 end) over (partition by stdname_id), common_name,case when official_name = ? then 1 when official_name LIKE ? || '%' then 2 else 3 end, official_name  
target.advsearch.uniprot.query = select uniprot_id, stdname_id, common_name, uniprot_id as label, uniprot_id as value, '|' as operator from target_search.list_uniprot_id WHERE uniprot_id LIKE '%' || ? || '%' order by min(case when uniprot_id = ? then 1  when uniprot_id LIKE ? || '%' then 2 else 3 end) over (partition by stdname_id), common_name,case when uniprot_id = ? then 1 when uniprot_id LIKE ? || '%' then 2 else 3 end, uniprot_id  
target.advsearch.pdbids.query = select pdb_id, stdname_id, common_name,pdb_id as label,pdb_id as value, '|' as operator from target_search.list_pdb_ids WHERE pdb_id LIKE '%' || ? || '%' order by min(case when pdb_id = ? then 1  when pdb_id LIKE ? || '%' then 2 else 3 end) over (partition by stdname_id), common_name,case when pdb_id = ? then 1 when pdb_id LIKE ? || '%' then 2 else 3 end, pdb_id  
target.advsearch.commonname.query = select  stdname_id, common_name, common_name as label, common_name as value, '|' as operator from target_search.standard_name_master WHERE common_name LIKE '%' || ? || '%' order by min(case when common_name = ? then 1  when common_name LIKE ? || '%' then 2 else 3 end) over (partition by stdname_id), common_name,case when common_name = ? then 1 when common_name LIKE ? || '%' then 2 else 3 end, common_name

user.login.check.query = SELECT userid, firstname, lastname, password, username FROM users WHERE username = ?
user.fetchall.query = SELECT userid, firstname, lastname, password, username FROM users

search.create.temptables.query = select target_search.create_temp_tables()
searchresults.truncate.query = truncate table search_results
visualresults.truncate.query = truncate table visual_results
search.results.insert.query = insert into search_results(act_id, ref_id, str_id, gvk_id, assay_id, stdname_id, assay_type, target_id, skeleton_id, scaffold2_id, framework2_id, adme_ontology_id, toxicity_ontology_id, source_id, endpoint_id, database_name)
visual.results.insert.query = insert into visual_results(act_id, ref_id, str_id, gvk_id, assay_id, stdname_id, assay_type, target_id, skeleton_id, scaffold2_id, framework2_id, adme_ontology_id, toxicity_ontology_id, source_id, endpoint_id, database_name) select * from search_results
protein.classification.query = select t.target_ontology_id as id, t.target_name as name, t.tree_level, t.display_order, t.parent_or_leaf_or_both, t.parent_target_ontology_id as parent_id,  count(a.act_id) as value from target_search.target_ontology_all_childs tc inner join target_search.target_ontology_master  t on (t.target_ontology_id = tc.target_ontology_id) left outer join target_search.standard_name_master s on (s.target_ontology_id = tc.child_target_ontology_id) left outer join visual_results a on (a.stdname_id = s.stdname_id) group by t.target_ontology_id, t.target_name, t.tree_level, t.display_order, t.parent_or_leaf_or_both, t.parent_target_ontology_id having count(distinct a.gvk_id) > 0 order by id
bibliography.query = select b.bibliograph_ontology_id as id, b.bibliograph_name as name, b.tree_level, b.display_order, b.parent_or_leaf_or_both, b.parent_bibliograph_ontology_id as parent_id,  count(distinct gvk_id) as value from target_search.bibliograph_ontology_all_childs bc inner join target_search.bibliograph_ontology_master  b on (b.bibliograph_ontology_id = bc.bibliograph_ontology_id) left outer join target_search.bilbiograph_reference_map br on (br.bibliograph_ontology_id = bc.child_bibliograph_ontology_id) left outer join visual_results a on (a.ref_id = br.ref_id) group by b.bibliograph_ontology_id, b.bibliograph_name, b.tree_level, b.display_order, b.parent_or_leaf_or_both, b.parent_bibliograph_ontology_id having count(distinct gvk_id) > 0 order by id
yearwise.query = select b.ref_year_ontology_id as id, b.ref_year_name as name , b.tree_level, b.display_order, b.parent_or_leaf_or_both, b.parent_ref_year_ontology_id as parent_id, count(distinct gvk_id) as value from target_search.ref_year_ontology_all_childs bc inner join target_search.ref_year_ontology_master  b on (b.ref_year_ontology_id = bc.ref_year_ontology_id) left outer join target_search.ref_year_reference_map br on (br.ref_year_ontology_id = bc.child_ref_year_ontology_id) left outer join visual_results a on (a.ref_id = br.ref_id) group by b.ref_year_ontology_id, b.ref_year_name, b.tree_level, b.display_order, b.parent_or_leaf_or_both, b.parent_ref_year_ontology_id having sum(distinct gvk_id) > 0
indication.query = select iom.icd10_code as id, iom.therapeutic_use as name, iom.display_order,iom.parent_or_leaf_or_both, iom.parent_icd10_code as parent_id,iom.tree_level, sum(gvk_id) as value from target_search.indication_ontology_master iom inner join target_search.indication_ontology_all_childs ioac on (ioac.icd10_code = iom.icd10_code) left outer join ( select icd10_code, count(gvk_id) gvk_id from ( select icd10_code, g.gvk_id from target_search.therapeutic_area_icd10 ta, visual_results g where ta.gvk_ids_array && array[g.gvk_id] ) g group by icd10_code ) ta on (ta.icd10_code = ioac.child_icd10_code) group by iom.icd10_code, iom.therapeutic_use, iom.display_order,iom.parent_or_leaf_or_both, iom.parent_icd10_code,iom.tree_level having sum(gvk_id) > 0 order by display_order
toxicity.query = select t.toxicity_ontology_id as id, t.toxicity_name as name, t.tree_level, t.display_order,t.has_data, t.is_leaf, count(distinct gvk_id) as value  from target_search.toxicity_ontology_all_childs tc inner join target_search.toxicity_ontology_master t on (t.toxicity_ontology_id = tc.toxicity_ontology_id) left outer join visual_results a on (a.toxicity_ontology_id = tc.child_toxicity_ontology_id) group by t.toxicity_ontology_id, t.toxicity_name, t.tree_level, t.display_order, t.is_leaf, t.parent_toxicity_ontology_id having count(distinct a.gvk_id) > 0
taxonomy.query = select t.tax_id as id, t.tax_name as name, t.tree_level, t.display_order, t.has_data, t.is_leaf, count(distinct vr.gvk_id) gvk_id_cnt from target_search.taxonomy_all_childs tc inner join target_search.taxonomy_master t on (t.tax_id = tc.tax_id) left outer join target_search.source_classification_master s on (s.tax_id = tc.child_tax_id) left outer join visual_results vr on (vr.source_id = s.source_id) group by t.tax_id, t.tax_name, t.tree_level, t.display_order, t.has_data, t.is_leaf having count(distinct vr.gvk_id) > 0 order by t.display_order
endpoint.query = select e.endpoint_id as id, e.endpoint_name as name, e.tree_level, e.display_order, e.has_data, e.is_leaf, count(distinct vr.gvk_id) gvk_id_cnt from target_search.endpoint_all_childs ec inner join target_search.endpoint_master e on (e.endpoint_id = ec.endpoint_id ) left outer join visual_results vr on (vr.endpoint_id = ec.child_endpoint_id) group by e.endpoint_id, e.endpoint_name, e.tree_level, e.display_order, e.has_data, e.is_leaf having count(distinct vr.gvk_id) > 0
visual.temp.table.truncate.query = truncate table visual_results
bibliography.visualization.filter.query = insert into visual_results select * from search_results where ref_id in (select br.ref_id from target_search.bibliograph_ontology_all_childs bc inner join target_search.bilbiograph_reference_map br on (br.bibliograph_ontology_id = bc.child_bibliograph_ontology_id)  where bc.bibliograph_ontology_id in 
target.visualization.filter.query = insert into visual_results select * from search_results where stdname_id in (select s.stdname_id from target_search.target_ontology_all_childs tc left outer join target_search.standard_name_master s on (s.target_ontology_id = tc.child_target_ontology_id)  where tc.target_ontology_id in 
yearwise.visualization.filter.query = insert into visual_results select * from search_results where ref_id in( select br.ref_id from target_search.ref_year_ontology_all_childs bc inner join target_search.ref_year_reference_map br on (br.ref_year_ontology_id = bc.child_ref_year_ontology_id) where bc.ref_year_ontology_id in 
indication.visualization.filter.query = insert into visual_results select * from search_results where gvk_id in (select gvk_id from target_search.therapeutic_area ta  where ta.icd10_code in (select child_icd10_code from target_search.indication_ontology_all_childs ioac where ioac.icd10_code in 
toxicity.visualization.filter.query = insert into visual_results select * from search_results where endpoint_id in (select child_endpoint_id from target_search.endpoint_all_childs ec where ec.endpoint_id in (10))
visual.results.all.insert.query = insert into visual_results(act_id, ref_id, str_id, gvk_id, assay_id, stdname_id, assay_type, target_id) select act_id, ref_id, str_id, gvk_id, assay_id, stdname_id, assay_type, target_id from all_mapping_ids where gvk_id in (select gvk_id from search_results)

actidlist.from.temptable.query = select distinct act_id as act_id from search_results
assayidlist.from.temptable.query = select distinct assay_id as assay_id from search_results
refidlist.from.temptable.query = select distinct ref_id as ref_id from search_results
gvkidlist.from.temptable.query = select distinct gvk_id as gvk_id from search_results
stridlist.from.visual.temptable.oount.query = select count(distinct str_id) as count from visual_results
stridlist.from.temptable.query = select str_id as str_id from visual_results

actidlist.from.visual.temptable.query = select distinct act_id as act_id from visual_results
assayidlist.from.visual.temptable.query = select distinct assay_id as assay_id from visual_results
refidlist.from.visual.temptable.query = select distinct ref_id as ref_id from visual_results
gvkidlist.from.visual.temptable.query = select distinct gvk_id as gvk_id from visual_results
stridlist.from.visual.temptable.query = select str_id as str_id from visual_results
allids.from.visual.temptable.query = select act_id as actId, assay_id as assayId, ref_id as refId, gvk_id as gvkId, str_id as strId from visual_results

heatmap.results.query = select ami.str_id,snm.common_name,sm.smiles,ami.activity_value from target_search.all_mapping_ids ami left outer join target_search.standard_name_master snm on (snm.stdname_id = ami.stdname_id) inner join structure_search.structure_master sm on (sm.str_id = ami.str_id) where ami.str_id in (select str_id from visual_results) and ami.act_id > 0 limit 500;
userdata.heatmap.results.query = select ami.str_id,snm.common_name,sm.smiles,ami.activity_value from target_search.all_mapping_ids ami left outer join target_search.standard_name_master snm on (snm.stdname_id = ami.stdname_id) inner join structure_search.structure_master sm on (sm.str_id = ami.str_id) where ami.str_id in (select str_id from visual_results) and ami.act_id > 0  

molecular.query.details = select ami.str_id,sm.smiles,ami.activity_value from target_search.all_mapping_ids ami left outer join target_search.standard_name_master snm on (snm.stdname_id = ami.stdname_id) inner join structure_search.structure_master sm on (sm.str_id = ami.str_id) where ami.str_id in (select str_id from visual_results) and ami.act_id > 0 limit 500;
stdnameidlist.from.visual.temptable.query = select distinct stdname_id as stdname_id from visual_results
targetidlist.from.visual.temptable.query = select distinct target_id as target_id from visual_results
#allids.from.visual.temptable.query = select act_id as actId, assay_id as assayId, ref_id as refId, gvk_id as gvkId from visual_results


#activity.export.query = select activityta.act_id,COALESCE(activityta.activity,'NA') as activity,COALESCE(activityta.activity_mechanism,'NA') as activity_mechanism, COALESCE(activityta.activity_prefix,'NA') as activity_prefix, COALESCE(activityta.activity_remarks,'NA') as activity_remarks, COALESCE(activityta.activity_type,'NA') as activity_type,COALESCE(activityta.activity_uom,'NA') as activity_uom,COALESCE(activityta.activity_value,'0') as activity_value,COALESCE(activityta.assay_method_name,'NA') as assay_method_name,COALESCE(activityta.std_activity_type,'NA') as std_activity_type,COALESCE(activityta.std_act_prefix,'NA') as std_act_prefix,COALESCE(activityta.assay_type,'NA') as assay_type,COALESCE(activityta.cells_cellline_organ,'NA') as cells_cellline_organ,COALESCE(activityta.common_name,'NA') as common_name,COALESCE(activityta.dose,'NA') as dose,COALESCE(activityta.dose_prefix ,'NA') as dose_prefix,COALESCE(activityta.dose_uom ,'NA') as dose_uom ,COALESCE(activityta.enzyme_cell_assay ,'NA') as enzyme_cell_assay ,COALESCE(activityta.measured ,'NA') as measured ,COALESCE(activityta.micro_molarvalue ,'0') as micro_molarvalue,COALESCE(activityta.parameter,'NA') as parameter,COALESCE(activityta.reference,'NA') as reference,COALESCE(activityta.roa,'NA') as roa,COALESCE(activityta.sd,'0') as sd,COALESCE(activityta.source,'NA') as source,COALESCE(activityta.standard_uom,'NA') as standard_uom from tab_view_activity.activity_tab activityta where activityta.act_id in :actIdList
activity.export.query = select DISTINCT(activityta.act_id),COALESCE(activityta.activity,'NA') as activity,COALESCE(activityta.activity_mechanism,'NA') as activity_mechanism, COALESCE(activityta.activity_prefix,'NA') as activity_prefix, COALESCE(activityta.activity_remarks,'NA') as activity_remarks, COALESCE(activityta.activity_type,'NA') as activity_type,COALESCE(activityta.activity_uom,'NA') as activity_uom,COALESCE(activityta.activity_value,'0') as activity_value,COALESCE(activityta.assay_method_name,'NA') as assay_method_name,COALESCE(activityta.std_activity_type,'NA') as std_activity_type,COALESCE(activityta.std_act_prefix,'NA') as std_act_prefix,COALESCE(activityta.assay_type,'NA') as assay_type,COALESCE(activityta.cells_cellline_organ,'NA') as cells_cellline_organ,COALESCE(activityta.common_name,'NA') as common_name,COALESCE(activityta.dose,'NA') as dose,COALESCE(activityta.dose_prefix ,'NA') as dose_prefix,COALESCE(activityta.dose_uom ,'NA') as dose_uom ,COALESCE(activityta.enzyme_cell_assay ,'NA') as enzyme_cell_assay ,COALESCE(activityta.measured ,'NA') as measured ,COALESCE(activityta.micro_molarvalue ,'0') as micro_molarvalue,COALESCE(activityta.parameter,'NA') as parameter,COALESCE(activityta.reference,'NA') as reference,COALESCE(activityta.roa,'NA') as roa,COALESCE(activityta.sd,'0') as sd,COALESCE(activityta.source,'NA') as source,COALESCE(activityta.standard_uom,'NA') as standard_uom from tab_view_activity.activity_tab activityta where activityta.act_id in
#assay.export.query = select assay_id as assay_id,coalesce(protein,'NA') as protein,coalesce(standard_name,'NA') as standard_name,coalesce(mutant,'NA') as mutant,coalesce(wild_type,'NA') as wild_type,coalesce(new_residue,'NA') as new_residue,coalesce(old_residue,'NA')as old_residue,coalesce(operation,'NA')as operation,coalesce(assay_position,'NA')as assay_position,coalesce(target_profile,'NA')as target_profile,coalesce(p_s_m,'NA')as p_s_m,coalesce(buffer,'NA')as buffer,coalesce(buffer_conc,'NA')as buffer_conc,coalesce(buffer_prefix,'NA')as buffer_prefix,coalesce(buffer_uom,'NA')as buffer_uom,coalesce(substrate,'NA')as substrate,coalesce(substrate_conc,'NA')as substrate_conc,coalesce(substrate_prefix,'NA')as substrate_prefix,coalesce(substrate_uom,'NA')as substrate_uom,coalesce(radio_ligand,'NA')as radio_ligand,coalesce(radio_ligand_prefix,'NA')as radio_ligand_prefix,coalesce(radio_ligand_uom,'NA')as radio_ligand_uom,coalesce(radio_ligand_conc,'NA')as radio_ligand_conc,coalesce(co_administered,'NA')as co_administered,coalesce(co_administered_prefix,'NA')as co_administered_prefix,coalesce(co_administered_uom,'NA')as co_administered_uom,coalesce(co_administered_value,'NA')as co_administered_value,coalesce(in_presence_of,'NA')as in_presence_of,coalesce(in_presence_of_conc,'NA')as in_presence_of_conc,coalesce(in_presence_of_prefix,'NA')as in_presence_of_prefix,coalesce(in_presence_of_uom,'NA')as in_presence_of_uom,coalesce(incubation_time,'NA')as incubation_time,coalesce(incubation_prefix,'NA')as incubation_prefix,coalesce(incubation_uom,'NA')as incubation_uom,coalesce(temperature,'NA')as temperature,coalesce(temperature_prefix,'NA')as temperature_prefix,coalesce(temperature_uom,'NA')as temperature_uom,coalesce(ph_prefix,'NA')as ph_prefix,coalesce(ph,'NA')as ph from tab_view_assay.assay_tab where assay_id in :assayIdList
assay.export.query = select DISTINCT(assay_id),coalesce(protein,'NA') as protein,coalesce(standard_name,'NA') as standard_name,coalesce(mutant,'NA') as mutant,coalesce(wild_type,'NA') as wild_type,coalesce(new_residue,'NA') as new_residue,coalesce(old_residue,'NA')as old_residue,coalesce(operation,'NA')as operation,coalesce(assay_position,'NA')as assay_position,coalesce(target_profile,'NA')as target_profile,coalesce(p_s_m,'NA')as p_s_m,coalesce(buffer,'NA')as buffer,coalesce(buffer_conc,'NA')as buffer_conc,coalesce(buffer_prefix,'NA')as buffer_prefix,coalesce(buffer_uom,'NA')as buffer_uom,coalesce(substrate,'NA')as substrate,coalesce(substrate_conc,'NA')as substrate_conc,coalesce(substrate_prefix,'NA')as substrate_prefix,coalesce(substrate_uom,'NA')as substrate_uom,coalesce(radio_ligand,'NA')as radio_ligand,coalesce(radio_ligand_prefix,'NA')as radio_ligand_prefix,coalesce(radio_ligand_uom,'NA')as radio_ligand_uom,coalesce(radio_ligand_conc,'NA')as radio_ligand_conc,coalesce(co_administered,'NA')as co_administered,coalesce(co_administered_prefix,'NA')as co_administered_prefix,coalesce(co_administered_uom,'NA')as co_administered_uom,coalesce(co_administered_value,'NA')as co_administered_value,coalesce(in_presence_of,'NA')as in_presence_of,coalesce(in_presence_of_conc,'NA')as in_presence_of_conc,coalesce(in_presence_of_prefix,'NA')as in_presence_of_prefix,coalesce(in_presence_of_uom,'NA')as in_presence_of_uom,coalesce(incubation_time,'NA')as incubation_time,coalesce(incubation_prefix,'NA')as incubation_prefix,coalesce(incubation_uom,'NA')as incubation_uom,coalesce(temperature,'NA')as temperature,coalesce(temperature_prefix,'NA')as temperature_prefix,coalesce(temperature_uom,'NA')as temperature_uom,coalesce(ph_prefix,'NA')as ph_prefix,coalesce(ph,'NA')as ph from tab_view_assay.assay_tab where assay_id in
# reference.export.query = select ref_id,coalesce(ref_type,'NA')as ref_type,coalesce(journal_patent_name,'NA')as journal_patent_name,coalesce(reference,'NA')as reference,coalesce(year,'NA')as year,coalesce(volume,'NA')as volume,coalesce(issue,'NA')as issue,coalesce(start_page,'NA')as start_page,coalesce(end_page,'NA')as end_page,coalesce(pubmed_id,'0')as pubmed_id,coalesce(doi,'NA')as doi,coalesce(patent_no,'NA')as patent_no,coalesce(application_type,'NA')as application_type,coalesce(issn_no,'NA')as issn_no,coalesce(title,'NA')as title,coalesce(abstract,'NA')as abstract,coalesce(authors,'NA')as authors,coalesce(company_names,'NA')as company_names,coalesce(company_addresses,'NA')as company_addresses from tab_view_reference.reference_tab where ref_id in :refIdList
reference.export.query = select DISTINCT(ref_id),coalesce(ref_type,'NA')as ref_type,coalesce(journal_patent_name,'NA')as journal_patent_name,coalesce(reference,'NA')as reference,coalesce(year,'NA')as year,coalesce(volume,'NA')as volume,coalesce(issue,'NA')as issue,coalesce(start_page,'NA')as start_page,coalesce(end_page,'NA')as end_page,coalesce(pubmed_id,'0')as pubmed_id,coalesce(doi,'NA')as doi,coalesce(patent_no,'NA')as patent_no,coalesce(application_type,'NA')as application_type,coalesce(issn_no,'NA')as issn_no,coalesce(title,'NA')as title,coalesce(abstract,'NA')as abstrac,coalesce(authors,'NA')as authors,coalesce(company_names,'NA')as company_names,coalesce(company_addresses,'NA')as company_addresses from tab_view_reference.reference_tab where ref_id in
# structure.export.query = select  gvk_id,coalesce(compound_names,'NA')as compound_names,coalesce(sub_smiles,'NA')as sub_smiles,coalesce(inchikey,'NA')as inchikey,coalesce(originator,'NA')as originator,coalesce(derivatives,'NA')as derivatives,coalesce(bio_assay,'NA')as bio_assay,coalesce(primary_targets,'NA')as primary_targets,coalesce(mechanisms,'NA')as mechanisms,coalesce(compound_status,'NA')as compound_status,coalesce(mol_formula,'NA')as mol_formula,mol_weight from tab_view_structure.structure_details_tab where gvk_id in :gvkIdList
structure.export.query = select  DISTINCT(gvk_id),coalesce(compound_names,'NA')as compound_names,coalesce(sub_smiles,'NA')as sub_smiles,coalesce(inchikey,'NA')as inchikey,coalesce(originator,'NA')as originator,coalesce(derivatives,'NA')as derivatives,coalesce(bio_assay,'NA')as bio_assay,coalesce(primary_targets,'NA')as primary_targets,coalesce(mechanisms,'NA')as mechanisms,coalesce(compound_status,'NA')as compound_status,coalesce(mol_formula,'NA')as mol_formula,mol_weight from tab_view_structure.structure_details_tab where gvk_id in

activity.temp.export.query = select DISTINCT(activityta.act_id),COALESCE(activityta.activity,'NA') as activity,COALESCE(activityta.activity_mechanism,'NA') as activity_mechanism, COALESCE(activityta.activity_prefix,'NA') as activity_prefix, COALESCE(activityta.activity_remarks,'NA') as activity_remarks, COALESCE(activityta.activity_type,'NA') as activity_type,COALESCE(activityta.activity_uom,'NA') as activity_uom,COALESCE(activityta.activity_value,'0') as activity_value, COALESCE(activityta.assay_method_name,'NA') as assay_method_name,COALESCE(activityta.std_activity_type,'NA') as std_activity_type,COALESCE(activityta.std_act_prefix,'NA') as std_act_prefix, COALESCE(activityta.assay_type,'NA') as assay_type,COALESCE(activityta.cells_cellline_organ,'NA') as cells_cellline_organ,COALESCE(activityta.common_name,'NA') as common_name,COALESCE(activityta.dose,'NA') as dose, COALESCE(activityta.dose_prefix ,'NA') as dose_prefix,COALESCE(activityta.dose_uom ,'NA') as dose_uom ,COALESCE(activityta.enzyme_cell_assay ,'NA') as enzyme_cell_assay ,COALESCE(activityta.measured ,'NA') as measured , COALESCE(activityta.micro_molarvalue ,'0') as micro_molarvalue,COALESCE(activityta.parameter,'NA') as parameter,COALESCE(activityta.reference,'NA') as reference,COALESCE(activityta.roa,'NA') as roa, COALESCE(activityta.sd,'0') as sd,COALESCE(activityta.source,'NA') as source,COALESCE(activityta.standard_uom,'NA') as standard_uom from tab_view_activity.activity_tab activityta  , visual_results vr where activityta.act_id = vr.act_id
assay.temp.export.query = select DISTINCT(assaytab.assay_id),coalesce(protein,'NA') as protein,coalesce(standard_name,'NA') as standard_name,coalesce(mutant,'NA') as mutant,coalesce(wild_type,'NA') as wild_type,coalesce(new_residue,'NA') as new_residue, coalesce(old_residue,'NA')as old_residue,coalesce(operation,'NA')as operation,coalesce(assay_position,'NA')as assay_position,coalesce(target_profile,'NA')as target_profile,coalesce(p_s_m,'NA')as p_s_m, coalesce(buffer,'NA')as buffer,coalesce(buffer_conc,'NA')as buffer_conc,coalesce(buffer_prefix,'NA')as buffer_prefix,coalesce(buffer_uom,'NA')as buffer_uom,coalesce(substrate,'NA')as substrate, coalesce(substrate_conc,'NA')as substrate_conc,coalesce(substrate_prefix,'NA')as substrate_prefix,coalesce(substrate_uom,'NA')as substrate_uom,coalesce(radio_ligand,'NA')as radio_ligand, coalesce(radio_ligand_prefix,'NA')as radio_ligand_prefix,coalesce(radio_ligand_uom,'NA')as radio_ligand_uom,coalesce(radio_ligand_conc,'NA')as radio_ligand_conc,coalesce(co_administered,'NA')as co_administered, coalesce(co_administered_prefix,'NA')as co_administered_prefix,coalesce(co_administered_uom,'NA')as co_administered_uom,coalesce(co_administered_value,'NA')as co_administered_value,coalesce(in_presence_of,'NA')as in_presence_of, coalesce(in_presence_of_conc,'NA')as in_presence_of_conc,coalesce(in_presence_of_prefix,'NA')as in_presence_of_prefix,coalesce(in_presence_of_uom,'NA')as in_presence_of_uom,coalesce(incubation_time,'NA')as incubation_time, coalesce(incubation_prefix,'NA')as incubation_prefix,coalesce(incubation_uom,'NA')as incubation_uom,coalesce(temperature,'NA')as temperature,coalesce(temperature_prefix,'NA')as temperature_prefix, coalesce(temperature_uom,'NA')as temperature_uom,coalesce(ph_prefix,'NA')as ph_prefix,coalesce(ph,'NA')as ph from tab_view_assay.assay_tab assaytab, visual_results vr where assaytab.assay_id = vr.assay_id
reference.temp.export.query = select DISTINCT(reftab.ref_id),coalesce(ref_type,'NA')as ref_type,coalesce(journal_patent_name,'NA')as journal_patent_name,coalesce(reference,'NA')as reference,coalesce(year,'NA')as year,coalesce(volume,'NA')as volume,coalesce(issue,'NA')as issue, coalesce(start_page,'NA')as start_page,coalesce(end_page,'NA')as end_page,coalesce(pubmed_id,'0')as pubmed_id,coalesce(doi,'NA')as doi,coalesce(patent_no,'NA')as patent_no,coalesce(application_type,'NA')as application_type, coalesce(issn_no,'NA')as issn_no,coalesce(title,'NA')as title,coalesce(abstract,'NA')as abstract,coalesce(authors,'NA')as authors,coalesce(company_names,'NA')as company_names, coalesce(company_addresses,'NA')as company_addresses from tab_view_reference.reference_tab reftab, visual_results vr where reftab.ref_id = vr.ref_id
structure.temp.export.query = select  DISTINCT(strtab.gvk_id),coalesce(compound_names,'NA')as compound_names,coalesce(sub_smiles,'NA')as sub_smiles,coalesce(inchikey,'NA')as inchikey,coalesce(originator,'NA')as originator,coalesce(derivatives,'NA')as derivatives, coalesce(bio_assay,'NA')as bio_assay,coalesce(primary_targets,'NA')as primary_targets,coalesce(mechanisms,'NA')as mechanisms,coalesce(compound_status,'NA')as compound_status, coalesce(mol_formula,'NA')as mol_formula,mol_weight from tab_view_structure.structure_details_tab  strtab, visual_results vr where strtab.gvk_id = vr.gvk_id

allmaping.query = SELECT act_id, gvk_id, str_id, ref_id, assay_id, stdname_id, target_id, cells_id, source_id, cell_line_id, activity_value, assay_type, p_s_m FROM all_mapping_ids WHERE stdname_id IN
allmapping.assay.query = SELECT act_id, gvk_id, str_id, ref_id, assay_id, stdname_id, target_id, cells_id, source_id, cell_line_id, activity_value, assay_type, p_s_m FROM all_mapping_ids WHERE assay_type IN
###target.protein.master.locus.query = SELECT source, stdname_id, standard_name, common_name, target_id, locus_id, multipleloci, locus_ref, official_name, uniprot_id, sci_source_name, pdb_id, flag, flag_new FROM target_search.target_protein_master WHERE locus_id IN
###target.protein.master.pdbid.query = SELECT source, stdname_id, standard_name, common_name, target_id, locus_id, multipleloci, locus_ref, official_name, uniprot_id, sci_source_name, pdb_id, flag, flag_new FROM target_search.target_protein_master WHERE pdb_id IN
###target.protein.master.commonname.query = SELECT source, stdname_id, standard_name, common_name, target_id, locus_id, multipleloci, locus_ref, official_name, uniprot_id, sci_source_name, pdb_id, flag, flag_new FROM target_search.target_protein_master WHERE common_name IN
###target.protein.master.officialname.query = SELECT source, stdname_id, standard_name, common_name, target_id, locus_id, multipleloci, locus_ref, official_name, uniprot_id, sci_source_name, pdb_id, flag, flag_new FROM target_search.target_protein_master WHERE official_name IN
###target.protein.master.uniprot.query = SELECT source, stdname_id, standard_name, common_name, target_id, locus_id, multipleloci, locus_ref, official_name, uniprot_id, sci_source_name, pdb_id, flag, flag_new FROM target_search.target_protein_master WHERE uniprot_id IN

target.advsearch.locus.in.query = select locus_id, stdname_id, common_name,locus_id as label, locus_id as value, '|' as operator from target_search.list_locus_id WHERE locus_id IN
target.advsearch.officialname.in.query = select official_name, stdname_id, common_name, official_name as label, official_name as value, '|' as operator from target_search.list_official_name WHERE official_name IN  
target.advsearch.uniprot.in.query = select uniprot_id, stdname_id, common_name, uniprot_id as label, uniprot_id as value, '|' as operator from target_search.list_uniprot_id WHERE uniprot_id IN 
target.advsearch.pdbids.in.query = select pdb_id, stdname_id, common_name,pdb_id as label,pdb_id as value, '|' as operator from target_search.list_pdb_ids WHERE pdb_id IN   
target.advsearch.commonname.in.query = select  stdname_id, common_name, common_name as label, common_name as value, '|' as operator from target_search.standard_name_master WHERE common_name IN 

activity.tab.query = select act_id, activity_type, std_activity_type, activity_uom, standard_uom, activity_prefix, std_act_prefix, activity_value, sd, activity_remarks, micro_molarvalue, assay_type, enzyme_cell_assay, common_name, activity_mechanism, source, cells_cellline_organ, measured, roa, assay_method_name, dose, dose_uom, dose_prefix, activity, parameter, reference from tab_view_activity.activity_tab order by :sortfield limit :limit offset :offset
activity.tab.count.query = select count(*) from tab_view_activity.activity_tab
activity.tab.actids.query = select act_id, activity_type, std_activity_type, activity_uom, standard_uom, activity_prefix, std_act_prefix, activity_value, sd, activity_remarks, micro_molarvalue, assay_type, enzyme_cell_assay, common_name, activity_mechanism, source, cells_cellline_organ, measured, roa, assay_method_name, dose, dose_uom, dose_prefix, activity, parameter, reference from tab_view_activity.activity_tab WHERE act_id IN (:ids) order by :sortfield limit :limit offset :offset
activity.tab.actids.count.query = select count(*) as count from tab_view_activity.activity_tab WHERE act_id IN (:ids)

reference.tab.query = SELECT ref_id,ref_type,journal_patent_name,reference,year,volume,issue,start_page,end_page,doi,pubmed_id,patent_no,application_type,issn_no,title,abstract,authors,company_names,company_addresses FROM tab_view_reference.reference_tab order by :sortfield limit :limit offset :offset
reference.tab.count.query = select count(*) from tab_view_reference.reference_tab

assay.tab.query = SELECT assay_id, protein, standard_name, mutant, wild_type, new_residue, old_residue, operation, assay_position, target_profile, p_s_m, buffer, buffer_conc, buffer_prefix, buffer_uom, substrate, substrate_conc, substrate_prefix, substrate_uom, radio_ligand, radio_ligand_prefix, radio_ligand_uom, radio_ligand_conc, co_administered, co_administered_prefix, co_administered_uom, co_administered_value, in_presence_of, in_presence_of_conc, in_presence_of_prefix, in_presence_of_uom, incubation_time, incubation_prefix, incubation_uom, temperature, temperature_prefix, temperature_uom, ph_prefix, ph FROM tab_view_assay.assay_tab order by :sortfield limit :limit offset :offset
assay.tab.count.query = select count(*) from tab_view_assay.assay_tab

structure.tab.query = SELECT gvk_id,compound_names,sub_smiles,inchikey,originator,derivatives,bio_assay,primary_targets,mechanisms,compound_status,mol_formula,mol_weight FROM tab_view_structure.structure_details_tab order by :sortfield limit :limit offset :offset
structure.tab.count.query = select count(*) from tab_view_structure.structure_details_tab

target.protein.pdbids.query = SELECT common_name, stdname_id, pdb_id FROM target_search.list_pdb_ids WHERE pdb_id IN

#Structure Queries
##structure.compound.search.like.query = SELECT str_id, compound_synonym, cmpd_type, compound_synonym as label,compound_synonym as value,'|' as operator FROM structure_search.compound_synonyms WHERE compound_synonym LIKE ?
##Structure Like query change for exact,startWith,Contains
structure.compound.search.like.query  = SELECT str_id, compound_synonym, cmpd_type, compound_synonym as label,compound_synonym as value,'|' as operator FROM structure_search.compound_synonyms WHERE compound_synonym LIKE '%' || ? || '%' order by case when compound_synonym = ? then 1 when compound_synonym like ? || '%' then 2 else 3 end,compound_synonym
structure.casno.search.like.query = SELECT str_id, cas_no, cas_no as label,cas_no as value,'|' as operator FROM structure_search.list_cas_no WHERE cas_no LIKE '%' || ? || '%' order by case when cas_no = ? then 1 when cas_no like ? || '%' then 2 else 3 end,cas_no
structural.properties.min.max.query = select min(mol_weight) as molmin, max(mol_weight) as molmax, min(hb_donors) as hbdonormin, max(hb_donors) as hbdonormax, min(hb_acceptor) as hbacceptormin, max(hb_acceptor) as hbacceptormax, min(rot_bonds) as rotbondsmin, max(rot_bonds) as rotbondsmax, min(clogp) as logpmin, max(clogp) as logpmax, min(psa) as psamin, max(psa) as psamax, min(pka_value) as pkamin, max(pka_value) as pkamax, min(pkb_value) as pkbmin, max(pkb_value) as pkbmax, min(logd_calc) as logdmin, max(logd_calc) as logdmax, min(solubility) as solubilitymin, max(solubility) as solubilitymax from structure_search.structural_properties

#Bibliography - Reference Search
bibliography.reference.search.like.query = SELECT ref_id, reference_name, reference_name as label,reference_name as value,'|' as operator FROM reference_search.reference_master WHERE lower(reference_name) LIKE '%' || ? || '%' order by case when lower(reference_name) = ? then 1 when lower(reference_name) like ? || '%' then 2 else 3 end,lower(reference_name)

#Bibliography - Reference Advance Search ListSearch Queries
bibliography.pubmed.search.like.query = select ref_id,pubmed_id , pubmed_id as label, pubmed_id as value, '|' as operator from reference_search.reference_master where pubmed_id in ( select pubmed_id::numeric from reference_search.list_pubmeds where pubmed_id like '%' || ? || '%' order by case when pubmed_id = ? then 1 when pubmed_id like ? || '%' then 2 else 3 end, pubmed_id )
bibliography.doi.search.like.query = select ref_id ,doi , doi as label, doi as value, '|' as operator from reference_search.reference_master where doi in ( select doi from reference_search.list_doi where upper(doi) like '%' || ? || '%' order by case when upper(doi) = ? then 1 when upper(doi) like ? || '%' then 2 else 3 end, doi )
bibliography.issnno.search.like.query  = select ref_id , issn_no , issn_no as label, issn_no as value, '|' as operator from reference_search.reference_master where issn_no in ( select issn_no from reference_search.list_ref_issn_nos where issn_no like '%' || ? || '%' order by case when issn_no = ? then 1 when issn_no like ? || '%' then 2 else 3 end, issn_no )
bibliography.mesh.search.like.query =  select ref_id , mesh , mesh as label, mesh as value, '|' as operator from reference_search.refs_pubmed_mesh where mesh like '%' || ? || '%' order by case when mesh = ? then 1 when mesh like ? || '%' then 2 else 3 end, mesh
#Bibliography - Reference Advance Search Criterian Queries
bibliography.author.search.like.query = select author, ref_type, author as label, author as value, '|' as operator from reference_search.list_authors where author like '%' || ? || '%' order by case when author = ? then 1 when author like ? || '%' then 2 else 3 end, author
bibliography.company.search.like.query = 	select company_name, ref_type, company_name as label, company_name as value, '|' as operator from reference_search.list_companies where lower(company_name) like lower('%' || ? || '%') order by case when lower(company_name) = ? then 1 when lower(company_name) like lower (? || '%') then 2 else 3 end, lower(company_name)
#Bibliography - Custom Search
bibliography.journalname.search.query = select journal_name, journal_name as label, journal_name as value from reference_search.list_journal_names order by journal_name ASC
bibliography.custom.search.country.codes = AT,AU,BE,BR,CA,CH,CN,CZ,DE,DO,EP,ES,FR,GB,HU,IN,JP,KR,NL,SE,TW,US,WC,WO,ZA

# Activity Mechanism
activity.mechanism.list.query = select activity_mechanism as activityMechanism, activity_mechanism as value, activity_mechanism as label, '|' as operator from target_search.list_activity_mechanisms order by activity_mechanism asc

# Activity Types
activity.type.list.query = select activity_type, activity_type as label, activity_type as value, '|' as operator from target_search.list_activity_types where lower(activity_type) like '%' || ? || '%' order by case when lower(activity_type) = ? then 1 when lower(activity_type) like ? || '%' then 2 else 3 end, lower(activity_type)
activity.type.advancedsearch.list.query = select activity_type as label, activity_type as value from target_search.list_activity_type_uom_prefix where lower(activity_type) like lower('%' || ? || '%') order by activity_type
activity.uom.advancedsearch.list.query = select activity_uom as label, activity_uom as value from target_search.list_activity_type_uom_prefix where activity_type = ? and activity_uom is not null
activity.prefix.advancedsearch.list.query = select activity_prefix as label, activity_prefix as value from target_search.list_activity_type_uom_prefix where activity_type = ? and activity_prefix is not null
activity.prefix.advancedsearch.operators.list = <, <=, >, >=, =, R

#Target Protein Master Queries
targetprotein.common.byoption.query = SELECT source,stdname_id,standard_name,common_name,target_id,locus_id,multipleloci,locus_ref,official_name,uniprot_id,sci_source_name,pdb_id,flag,flag_new FROM target_search.target_protein_master
##query changed for exact,startwith,conatins
##targetprotein.pdb.query = SELECT target_id,stdname_id,pdb_id FROM target_search.target_protein_pdb_ids WHERE pdb_id like ?
targetprotein.pdb.query = SELECT common_name, stdname_id, pdb_id FROM target_search.list_pdb_ids WHERE pdb_id like '%' || ? || '%' order by case when pdb_id = ? then 1 when pdb_id like ? || '%' then 2 else 3 end,pdb_id

##targetprotein.commonname.query = SELECT source,stdname_id,standard_name,common_name,target_id,locus_id,multipleloci,locus_ref,official_name,uniprot_id,sci_source_name,pdb_id,flag,flag_new FROM target_protein_master WHERE common_name LIKE ? order by common_name

targetprotein.commonname.query  = SELECT source,stdname_id,standard_name,common_name,target_id,locus_id,multipleloci,locus_ref,official_name,uniprot_id,sci_source_name,pdb_id,flag,flag_new FROM target_search.target_protein_master WHERE common_name LIKE '%' || ? || '%' order by case when common_name  = ? then 1 when common_name like ? || '%' then 2 else 3 end,common_name 

visual.results.protein.insert.query = insert into visual_results_protein(act_id, ref_id, str_id, gvk_id, assay_id, stdname_id, assay_type, target_id) select * from search_results
visual.results.yearwise.insert.query = insert into visual_results_yearwise(act_id, ref_id, str_id, gvk_id, assay_id, stdname_id, assay_type, target_id) select * from search_results
visual.results.bibliography.insert.query = insert into visual_results_bibliography(act_id, ref_id, str_id, gvk_id, assay_id, stdname_id, assay_type, target_id) select * from search_results
visual.results.indication.insert.query = insert into visual_results_indication(act_id, ref_id, str_id, gvk_id, assay_id, stdname_id, assay_type, target_id) select * from search_results

#protein.classification.query = select t.target_ontology_id as id, t.target_name as name, t.tree_level, t.display_order, t.parent_or_leaf_or_both, t.parent_target_ontology_id as parent_id,  count(a.act_id) as value from target_search.target_ontology_all_childs tc inner join target_search.target_ontology_master  t on (t.target_ontology_id = tc.target_ontology_id) left outer join target_search.standard_name_master s on (s.target_ontology_id = tc.child_target_ontology_id) left outer join visual_results_protein a on (a.stdname_id = s.stdname_id) group by t.target_ontology_id, t.target_name, t.tree_level, t.display_order, t.parent_or_leaf_or_both, t.parent_target_ontology_id having count(distinct a.gvk_id) > 0 order by id
#bibliography.query = select b.bibliograph_ontology_id as id, b.bibliograph_name as name, b.tree_level, b.display_order, b.parent_or_leaf_or_both, b.parent_bibliograph_ontology_id,  count(distinct gvk_id) as value from target_search.bibliograph_ontology_all_childs bc inner join target_search.bibliograph_ontology_master  b on (b.bibliograph_ontology_id = bc.bibliograph_ontology_id) left outer join target_search.bilbiograph_reference_map br on (br.bibliograph_ontology_id = bc.child_bibliograph_ontology_id) left outer join visual_results_bibliography a on (a.ref_id = br.ref_id) group by b.bibliograph_ontology_id, b.bibliograph_name, b.tree_level, b.display_order, b.parent_or_leaf_or_both, b.parent_bibliograph_ontology_id having count(distinct gvk_id) > 0 order by id
#yearwise.query = select b.ref_year_ontology_id as id, b.ref_year_name as name , b.tree_level, b.display_order, b.parent_or_leaf_or_both, b.parent_ref_year_ontology_id, count(distinct gvk_id) as value from target_search.ref_year_ontology_all_childs bc inner join target_search.ref_year_ontology_master  b on (b.ref_year_ontology_id = bc.ref_year_ontology_id) left outer join target_search.ref_year_reference_map br on (br.ref_year_ontology_id = bc.child_ref_year_ontology_id) left outer join visual_results_yearwise a on (a.ref_id = br.ref_id) group by b.ref_year_ontology_id, b.ref_year_name, b.tree_level, b.display_order, b.parent_or_leaf_or_both, b.parent_ref_year_ontology_id having sum(distinct gvk_id) > 0
#indication.query = select iom.icd10_code as id, iom.therapeutic_use as name, iom.display_order,iom.parent_or_leaf_or_both, iom.parent_icd10_code as parent_id,iom.tree_level, sum(gvk_id_cnt) as value from target_search.indication_ontology_master iom inner join target_search.indication_ontology_all_childs ioac on (ioac.icd10_code = iom.icd10_code) left outer join ( select icd10_code, count(gvk_id) gvk_id_cnt from ( select icd10_code, g.gvk_id from target_search.therapeutic_area_icd10 ta, visual_results_indication g where ta.gvk_ids_array && array[g.gvk_id] ) g group by icd10_code ) ta on (ta.icd10_code = ioac.child_icd10_code) group by iom.icd10_code, iom.therapeutic_use, iom.display_order,iom.parent_or_leaf_or_both, iom.parent_icd10_code,iom.tree_level having sum(gvk_id_cnt) > 0 order by display_order

#visualresults.protein.truncate.query = truncate table visual_results_protein
#visualresults.yearwise.truncate.query = truncate table visual_results_yearwise
#visualresults.bibliography.truncate.query = truncate table visual_results_bibliography
#visualresults.indication.truncate.query = truncate table visual_results_indication

visual.count.from.temptable.query = select count(distinct act_id) as actIdsCount, count(distinct ref_id) as refIdsCount, count(distinct str_id) as strIdsCount, count(distinct gvk_id) as gvkIdsCount, count(distinct assay_id) as assayIdsCount from visual_results
search.count.from.defaulttable.query = select statistics_json from statistics_summaries where statistics_type = 'Search Default Counts'

#Target Treeview Queries
target.treeview.default.query = select target_ontology_id as ontologyId, target_name as targetName, target_name as label, parent_target_ontology_id as parentOntologyId from target_search.target_ontology_master where parent_target_ontology_id is null
target.treeview.byontologyid.query = select target_ontology_id as ontologyId, target_name as targetName, target_name as label, parent_target_ontology_id as parentOntologyId from target_search.target_ontology_master where parent_target_ontology_id = ?
target.treeview.search.query = with recursive target_tree_search (target_ontology_id, parent_target_ontology_id, target_name, tree_level, display_order) as (select c.target_ontology_id, c.parent_target_ontology_id, c.target_name, c.tree_level, c.display_order from target_search.target_ontology_master c where lower(target_name) like lower('%' || ? || '%') or lower(target_name) like lower('%' || ? || '%') union select p.target_ontology_id, p.parent_target_ontology_id, p.target_name, p.tree_level, p.display_order from target_search.target_ontology_master p inner join target_tree_search cc on (p.target_ontology_id = cc.parent_target_ontology_id)) select target_ontology_id as ontologyId, parent_target_ontology_id as parentOntologyId, target_name as targetName, target_name as label, tree_level as treeLevel, display_order as displayOrder from target_tree_search order by 1
#target.treeview.search.query = with search_parents as ( select target_ontology_id from target_search.target_ontology_all_childs where child_target_ontology_id in (select target_ontology_id from target_search.target_ontology_master where lower(target_name) like lower('%' || ? || '%')) and child_target_ontology_id <> target_ontology_id ) select target_ontology_id as ontologyId, parent_target_ontology_id as parentOntologyId, target_name as targetName, target_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.target_ontology_master where coalesce(parent_target_ontology_id, target_ontology_id) in ( select * from search_parents )
target.treeview.search.in.query = with search_parents as ( select target_ontology_id from target_search.target_ontology_all_childs where child_target_ontology_id in (select target_ontology_id from target_search.target_ontology_master where target_name in (?) ) and child_target_ontology_id <> target_ontology_id ) select target_ontology_id as ontologyId, parent_target_ontology_id as parentOntologyId, target_name as targetName, target_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.target_ontology_master where coalesce(parent_target_ontology_id, target_ontology_id) in ( select * from search_parents )
#target.treeview.parentlevel.query = select target_ontology_id as ontologyId, target_name as targetName, target_name as label, parent_target_ontology_id as parentOntologyId from target_search.target_ontology_master where parent_or_leaf_or_both in ('Parent', 'Both') or (parent_target_ontology_id is null)
target.treeview.parentlevel.query = select target_ontology_id as ontologyId, parent_target_ontology_id as parentOntologyId, target_name as targetName, target_name as label, tree_level as treeLevel, display_order as displayOrder, parent_or_leaf_or_both as parentLeafBoth from target_search.target_ontology_master where ((parent_target_ontology_id is null) or (parent_target_ontology_id in (select target_ontology_id from target_search.target_ontology_master))) and (tree_level <= 1)

target.treeview.search.bytargetname.query = select target_name as targetName, target_name as label, target_name as value, '|' as operator from target_search.target_ontology_master where lower(target_name) like '%' || ? || '%' order by target_name ASC

#Indication Queries
indication.search.therapeuic.query = select therapeutic_use as therapeuticUse, therapeutic_use as label, therapeutic_use as value, '|' as operator from target_search.list_therapeutic_use WHERE lower(therapeutic_use) LIKE '%' || ? || '%' order by therapeutic_use ASC
indication.search.icd10codes.query = select icd10_code as icd10Code, icd10_code as label, icd10_code as value, '|' as operator from target_search.list_icd10_codes WHERE lower(icd10_code) LIKE '%' || ? || '%' order by icd10_code ASC

#Indication Treeview Queries
indication.treeview.default.query = select icd10_code as icd10Code, therapeutic_use as therapeuticUse, therapeutic_use as label, parent_icd10_code as parentIcd10Code from target_search.indication_ontology_master where parent_icd10_code is null
indication.treeview.byicd10code.query = select icd10_code as icd10Code, therapeutic_use as therapeuticUse, therapeutic_use as label, parent_icd10_code as parentIcd10Code from target_search.indication_ontology_master where parent_icd10_code = ?
indication.treeview.search.query = with recursive indication_tree_search (icd10_code, parent_icd10_code, therapeutic_use, tree_level, display_order) as (select c.icd10_code, c.parent_icd10_code, c.therapeutic_use, c.tree_level, c.display_order from target_search.indication_ontology_master c where lower(therapeutic_use) like lower('%' || ? || '%') or lower(therapeutic_use) like lower('%' || ? || '%') union select p.icd10_code, p.parent_icd10_code, p.therapeutic_use, p.tree_level, p.display_order from target_search.indication_ontology_master p inner join indication_tree_search cc on (p.icd10_code = cc.parent_icd10_code)) select icd10_code as icd10Code, parent_icd10_code as parentIcd10Code, therapeutic_use as therapeuticUse, therapeutic_use as label, tree_level as treeLevel, display_order as displayOrder from indication_tree_search order by 1
indication.treeview.search.in.query = with search_parents as ( select icd10_code from target_search.indication_ontology_all_childs where child_icd10_code in (select icd10_code from target_search.indication_ontology_master where therapeutic_use in (?) ) and child_icd10_code <> icd10_code ) select icd10_code as icd10Code, parent_icd10_code as parentIcd10Code, therapeutic_use as therapeuticUse, therapeutic_use as label, tree_level as treeLevel, display_order as displayOrder from target_search.indication_ontology_master where coalesce(parent_icd10_code, icd10_code) in ( select * from search_parents )
indication.treeview.parentlevel.query = select icd10_code as icd10Code, parent_icd10_code as parentIcd10Code, therapeutic_use as therapeuticUse, therapeutic_use as label, tree_level as treeLevel, display_order as displayOrder, parent_or_leaf_or_both as parentLeafBoth from target_search.indication_ontology_master where ((parent_icd10_code is null) or (parent_icd10_code in (select icd10_code from target_search.indication_ontology_master))) and (tree_level <= 1)
indication.treeview.search.bytherapeuticuse.query = select therapeutic_use as therapeuticUse, therapeutic_use as label, therapeutic_use as value, '|' as operator from target_search.indication_ontology_master where lower(therapeutic_use) like '%' || ? || '%' order by therapeutic_use ASC

#Adme Treeview Queries
adme.treeview.default.query = select adme_ontology_id as admeOntologyId, adme_name as admeName, adme_name as label, parent_adme_ontology_id as parentAdmeOntologyId from target_search.adme_ontology_master where parent_adme_ontology_id is null
adme.treeview.byadmeontologyid.query = select adme_ontology_id as admeOntologyId, adme_name as admeName, adme_name as label, parent_adme_ontology_id as parentAdmeOntologyId from target_search.adme_ontology_master where parent_adme_ontology_id = ?
adme.treeview.search.query = with recursive adme_tree_search (adme_ontology_id, parent_adme_ontology_id, adme_name, tree_level, display_order) as (select c.adme_ontology_id, c.parent_adme_ontology_id, c.adme_name, c.tree_level, c.display_order from target_search.adme_ontology_master c where lower(adme_name) like lower('%' || ? || '%') or lower(adme_name) like lower('%' || ? || '%') union select p.adme_ontology_id, p.parent_adme_ontology_id, p.adme_name, p.tree_level, p.display_order from target_search.adme_ontology_master p inner join adme_tree_search cc on (p.adme_ontology_id = cc.parent_adme_ontology_id)) select adme_ontology_id as admeOntologyId, parent_adme_ontology_id as parentAdmeOntologyId, adme_name as admeName, adme_name as label, tree_level as treeLevel, display_order as displayOrder from adme_tree_search order by 1
adme.treeview.search.in.query = with search_parents as ( select adme_ontology_id from target_search.adme_ontology_all_childs where child_adme_ontology_id in (select adme_ontology_id from target_search.adme_ontology_master where adme_name in (?) ) and child_adme_ontology_id <> adme_ontology_id ) select adme_ontology_id as admeOntologyId, parent_adme_ontology_id as parentAdmeOntologyId, adme_name as admeName, adme_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.adme_ontology_master where coalesce(parent_adme_ontology_id, adme_ontology_id) in ( select * from search_parents )
adme.treeview.parentlevel.query = select adme_ontology_id as admeOntologyId, parent_adme_ontology_id as parentAdmeOntologyId, adme_name as admeName, adme_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.adme_ontology_master where ((parent_adme_ontology_id is null) or (parent_adme_ontology_id in (select adme_ontology_id from target_search.adme_ontology_master))) and (tree_level <= 1)
adme.treeview.search.byadmename.query = select adme_name as admeName, adme_name as label, adme_name as value, '|' as operator from target_search.adme_ontology_master where lower(adme_name) like '%' || ? || '%' order by adme_name ASC

#Toxicity Treeview Queries
toxicity.treeview.default.query = select toxicity_ontology_id as toxicityOntologyId, toxicity_name as toxicityName, toxicity_name as label, parent_toxicity_ontology_id as parentToxicityOntologyId from target_search.toxicity_ontology_master where parent_toxicity_ontology_id is null
toxicity.treeview.bytoxicityontologyid.query = select toxicity_ontology_id as toxicityOntologyId, toxicity_name as toxicityName, toxicity_name as label, parent_toxicity_ontology_id as parentToxicityOntologyId from target_search.toxicity_ontology_master where parent_toxicity_ontology_id = ?
toxicity.treeview.search.query = with recursive toxicity_tree_search (toxicity_ontology_id, parent_toxicity_ontology_id, toxicity_name, tree_level, display_order) as (select c.toxicity_ontology_id, c.parent_toxicity_ontology_id, c.toxicity_name, c.tree_level, c.display_order from target_search.toxicity_ontology_master c where lower(toxicity_name) like lower('%' || ? || '%') or lower(toxicity_name) like lower('%' || ? || '%') union select p.toxicity_ontology_id, p.parent_toxicity_ontology_id, p.toxicity_name, p.tree_level, p.display_order from target_search.toxicity_ontology_master p inner join toxicity_tree_search cc on (p.toxicity_ontology_id = cc.parent_toxicity_ontology_id)) select toxicity_ontology_id as toxicityOntologyId, parent_toxicity_ontology_id as parentToxicityOntologyId, toxicity_name as toxicityName, toxicity_name as label, tree_level as treeLevel, display_order as displayOrder from toxicity_tree_search order by 1
toxicity.treeview.search.in.query = with search_parents as ( select toxicity_ontology_id from target_search.toxicity_ontology_all_childs where child_toxicity_ontology_id in (select toxicity_ontology_id from target_search.toxicity_ontology_master where toxicity_name in (?) ) and child_toxicity_ontology_id <> toxicity_ontology_id ) select toxicity_ontology_id as toxicityOntologyId, parent_toxicity_ontology_id as parentToxicityOntologyId, toxicity_name as toxicityName, toxicity_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.toxicity_ontology_master where coalesce(parent_toxicity_ontology_id, toxicity_ontology_id) in ( select * from search_parents )
toxicity.treeview.parentlevel.query = select toxicity_ontology_id as toxicityOntologyId, parent_toxicity_ontology_id as parentToxicityOntologyId, toxicity_name as toxicityName, toxicity_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.toxicity_ontology_master where ((parent_toxicity_ontology_id is null) or (parent_toxicity_ontology_id in (select toxicity_ontology_id from target_search.toxicity_ontology_master))) and (tree_level <= 1)
toxicity.treeview.search.bytoxicityname.query = select toxicity_name as toxicityName, toxicity_name as label, toxicity_name as value, '|' as operator from target_search.toxicity_ontology_master where lower(toxicity_name) like '%' || ? || '%' order by toxicity_name ASC

#Compound Categories Queries
compound.category.list.query=select compound_category as compoundCategory, compound_category as label, compound_category as value, '|' as operator from target_search.list_compound_categories order by compound_category

#Clinical Phases Queries
clinical.phase.list.query=select clinical_phase as clinicalPhase, clinical_phase as label, clinical_phase as value, '|' as operator from target_search.list_clinical_phases order by clinical_phase

#Source Queries
#List Queries
source.bysourcename.contains.query=select source_id as sourceId, source_name as sourceName, synonym, tax_id as TaxId, source_name as label, source_name as value, '|' as operator from target_search.list_source_synonyms where lower(source_name) LIKE '%' || ? || '%' order by source_name ASC
source.bysynonym.contains.query=select source_id as sourceId, source_name as sourceName, synonym, tax_id as TaxId, source_name as label, source_name as value, '|' as operator from target_search.list_source_synonyms where lower(synonym) LIKE '%' || ? || '%' order by synonym ASC
source.bytaxid.contains.query=select tax_id as taxId, tax_id as label, tax_id as value, '|' as operator from target_search.list_source_tax_ids where tax_id::TEXT LIKE '%' || ? || '%' order by tax_id
#Strain Queries
source.strainsearch.genus.contains.query=select distinct(genus) as label, genus as value, '|' as operator from target_search.source_classification_master  where genus is not null and lower(genus) LIKE '%' || ? || '%' order by genus asc
source.strainsearch.genus.default.query=select distinct(genus) as label, genus as value, '|' as operator from target_search.source_classification_master  where genus is not null order by genus asc
source.strainsearch.species.contains.query=select distinct(species) as label, species as value, '|' as operator from target_search.source_classification_master  where genus = ? and lower(species) LIKE '%' || ? || '%' and species is not null order by species asc
source.strainsearch.species.default.query=select distinct(species) as label, species as value, '|' as operator from target_search.source_classification_master  where genus = ? and species is not null order by species asc
source.strainsearch.strain.contains.query=select distinct(strain) as label, strain as value, '|' as operator from target_search.source_classification_master  where genus = ? and species = ? and lower(strain) LIKE '%' || ? || '%' and strain is not null order by strain asc
source.strainsearch.strain.default.query=select distinct(strain) as label, strain as value, '|' as operator from target_search.source_classification_master  where genus = ? and species = ? and strain is not null order by strain asc

#Taxonomy Treeview Queries
taxonomy.treeview.default.query = select tax_id as taxId, tax_name as taxName, tax_name as label, parent_tax_id as parentTaxId from target_search.taxonomy_master where parent_tax_id is null
taxonomy.treeview.bytaxid.query = select tax_id as taxId, tax_name as taxName, tax_name as label, parent_tax_id as parentTaxId from target_search.taxonomy_master where parent_tax_id = ?
taxonomy.treeview.search.query = with recursive taxonomy_tree_search (tax_id, parent_tax_id, tax_name, tree_level, display_order) as (select c.tax_id, c.parent_tax_id, c.tax_name, c.tree_level, c.display_order from target_search.taxonomy_master c where lower(tax_name) like lower('%' || ? || '%') or lower(tax_name) like lower('%' || ? || '%') union select p.tax_id, p.parent_tax_id, p.tax_name, p.tree_level, p.display_order from target_search.taxonomy_master p inner join taxonomy_tree_search cc on (p.tax_id = cc.parent_tax_id)) select tax_id as taxId, parent_tax_id as parentTaxId, tax_name as taxName, tax_name as label, tree_level as treeLevel, display_order as displayOrder from taxonomy_tree_search order by 1
taxonomy.treeview.search.in.query = with search_parents as ( select tax_id from target_search.taxonomy_all_childs where child_tax_id in (select tax_id from target_search.taxonomy_master where tax_name in (?) ) and child_tax_id <> tax_id ) select tax_id as taxId, parent_tax_id as parentTaxId, tax_name as taxName, tax_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.taxonomy_master where coalesce(parent_tax_id, tax_id) in ( select * from search_parents )
taxonomy.treeview.parentlevel.query = select tax_id as taxId, parent_tax_id as parentTaxId, tax_name as taxName, tax_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.taxonomy_master where ((parent_tax_id is null) or (parent_tax_id in (select tax_id from target_search.taxonomy_master))) and (tree_level <= 1)
taxonomy.treeview.search.bytaxname.query = select tax_name as taxName, tax_name as label, tax_name as value, '|' as operator from target_search.taxonomy_master where lower(tax_name) like '%' || ? || '%' order by tax_name ASC

#Acitivyt Endpoint Treeview Queries
endpoint.treeview.default.query = select endpoint_id as endpointId, endpoint_name as endpointName, endpoint_name as label, parent_endpoint_id as parentEndpointId from target_search.endpoint_master where parent_endpoint_id is null
endpoint.treeview.byendpointid.query = select endpoint_id as endpointId, endpoint_name as endpointName, endpoint_name as label, parent_endpoint_id as parentEndpointId from target_search.endpoint_master where parent_endpoint_id = ?
endpoint.treeview.search.query = with recursive taxonomy_tree_search (endpoint_id, parent_endpoint_id, endpoint_name, tree_level, display_order) as (select c.endpoint_id, c.parent_endpoint_id, c.endpoint_name, c.tree_level, c.display_order from target_search.endpoint_master c where lower(endpoint_name) like lower('%' || ? || '%') or lower(endpoint_name) like lower('%' || ? || '%') union select p.endpoint_id, p.parent_endpoint_id, p.endpoint_name, p.tree_level, p.display_order from target_search.endpoint_master p inner join taxonomy_tree_search cc on (p.endpoint_id = cc.parent_endpoint_id)) select endpoint_id as endpointId, parent_endpoint_id as parentEndpointId, endpoint_name as endpointName, endpoint_name as label, tree_level as treeLevel, display_order as displayOrder from taxonomy_tree_search order by 1
endpoint.treeview.search.in.query = with search_parents as ( select endpoint_id from target_search.taxonomy_all_childs where child_endpoint_id in (select endpoint_id from target_search.endpoint_master where endpoint_name in (?) ) and child_endpoint_id <> endpoint_id ) select endpoint_id as endpointId, parent_endpoint_id as parentEndpointId, endpoint_name as endpointName, endpoint_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.endpoint_master where coalesce(parent_endpoint_id, endpoint_id) in ( select * from search_parents )
endpoint.treeview.parentlevel.query = select endpoint_id as endpointId, parent_endpoint_id as parentEndpointId, endpoint_name as endpointName, endpoint_name as label, tree_level as treeLevel, display_order as displayOrder from target_search.endpoint_master where ((parent_endpoint_id is null) or (parent_endpoint_id in (select endpoint_id from target_search.endpoint_master))) and (tree_level <= 1)
endpoint.treeview.search.byendpointname.query = select endpoint_name as endpointName, endpoint_name as label, endpoint_name as value, '|' as operator from target_search.endpoint_master where lower(endpoint_name) like '%' || ? || '%' order by endpoint_name ASC


### External Microservice API Urls
microservices.execution.status = true
#microservices.url = http://localhost:8088/gostarmicroservices
#microservices.url = http://172.21.0.153:8081/gostar-microservices
microservices.url = http://172.21.0.153:8082/gostarnext-gatewayservice

microservice.usertoken.generation = /api/token/generate-token

# Analyzer Related URLs
microservice.dataanlyzers.heatmap.user.selection.service = /api/security/analyzersservice/v1/analyzers/userheatmapdata
microservice.dataanlyzers.molecular.pair.query.user.selection.service = /api/security/analyzersservice/v1/analyzers/usermolecularpairquerydata
microservice.dataanlyzers.molecular.pair.query.details = /api/security/analyzersservice/v1/analyzers/getmoleculardetails

# Tabularview Related URLs
microservice.activitytab.fieldfilter.service = /api/security/activityservice/v1/tabularview/activitytab/filterfield/byactids
microservice.activitytab.data.service = /api/security/activityservice/v1/tabularview/activitytab/byactids
microservice.activitytab.data.export.service = /api/security/activityservice/v1/tabularview/activitytab/byactids/export

microservice.assaytab.fieldfilter.service = /api/security/assayservice/v1/tabularview/assaytab/filterfield/byassayids
microservice.assaytab.data.service = /api/security/assayservice/v1/tabularview/assaytab/byassayids
microservice.assaytab.data.export.service = /api/security/assayservice/v1/tabularview/assaytab/byassayids/export

microservice.reftab.fieldfilter.service = /api/security/referenceservice/v1/tabularview/referencetab/filterfield/byrefids
microservice.reftab.data.service = /api/security/referenceservice/v1/tabularview/referencetab/byrefids
microservice.reftab.data.export.service = /api/security/referenceservice/v1/tabularview/referencetab/byrefids/export

microservice.strtab.fieldfilter.service = /api/security/structuredetailsservice/v1/tabularview/structuredetails/filterfield/bygvkids
microservice.strtab.data.service = /api/security/structuredetailsservice/v1/tabularview/structuredetails/bygvkids
microservice.strtab.data.export.service = /api/security/structuredetailsservice/v1/tabularview/structuredetails/bygvkids/export

microservice.proteinclassificationtab.fieldfilter.service = /api/security/proteinclassificationservice/v1/tabularview/proteinclassificationtab/filterfield/bystdnameids
microservice.proteinclassificationtab.data.service = /api/security/proteinclassificationservice/v1/tabularview/proteinclassificationtab/bystdnameids
microservice.proteinclassificationtab.data.export.service = /api/security/proteinclassificationservice/v1/tabularview/proteinclassificationtab/bystdnameids/export

microservice.targetdetailstab.fieldfilter.service = /api/security/targetdetailsservice/v1/tabularview/targetdetailstab/filterfield/bytargetids
microservice.targetdetailstab.data.service = /api/security/targetdetailsservice/v1/tabularview/targetdetailstab/bytargetids
microservice.targetdetailstab.data.export.service = /api/security/targetdetailsservice/v1/tabularview/targetdetailstab/bytargetids/export

microservice.clinicalstatustab.fieldfilter.service = /api/security/clinicalstatusservice/v1/tabularview/clinicalstatustab/filterfield/bygvkrefids
microservice.clinicalstatustab.data.service = /api/security/clinicalstatusservice/v1/tabularview/clinicalstatustab/bygvkrefids
microservice.clinicalstatustab.data.export.service = /api/security/clinicalstatusservice/v1/tabularview/clinicalstatustab/bygvkrefids/export

microservice.indicationtab.fieldfilter.service = /api/security/indicationservice/v1/tabularview/indicationtab/filterfield/bygvkids
microservice.indicationtab.data.service = /api/security/indicationservice/v1/tabularview/indicationtab/bygvkids
microservice.indicationtab.data.export.service = /api/security/indicationservice/v1/tabularview/indicationtab/bygvkids/export

microservice.framework2tab.fieldfilter.service = /api/security/structuredetailsservice/v1/tabularview/framework2/filterfield/bygvkids
microservice.framework2tab.data.service = /api/security/structuredetailsservice/v1/tabularview/framework2/bygvkids
microservice.framework2tab.data.export.service = /api/security/structuredetailsservice/v1/tabularview/framework2/bygvkids/export

microservice.scaffold2tab.fieldfilter.service = /api/security/structuredetailsservice/v1/tabularview/scaffold2/filterfield/bygvkids
microservice.scaffold2tab.data.service = /api/security/structuredetailsservice/v1/tabularview/scaffold2/bygvkids
microservice.scaffold2tab.data.export.service = /api/security/structuredetailsservice/v1/tabularview/scaffold2/bygvkids/export

microservice.skeletontab.fieldfilter.service = /api/security/structuredetailsservice/v1/tabularview/skeleton/filterfield/bygvkids
microservice.skeletontab.data.service = /api/security/structuredetailsservice/v1/tabularview/skeleton/bygvkids
microservice.skeletontab.data.export.service = /api/security/structuredetailsservice/v1/tabularview/skeleton/bygvkids/export